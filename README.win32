-- How to crosscompile lightspark win32 binaries on a linux box --
(This is the only supported way to build win32 binaries)

I assume that your currently one level above the directory
'git', which contains the lightspark sources.

1. Apply this patch to your local cmake installation to fix a bug with .rc file handling:
  http://public.kitware.com/Bug/file_download.php?file_id=4062&type=bug

2. Install MXE (M cross environment) by
  1. git clone -b master https://github.com/mxe/mxe.git
  2. cd mxe
  3. Apply the patch from below to src/curl.mk
  4. make gcc llvm glibmm gtk2 ffmpeg cairo pango boost glew freetype curl librtmp
     Note: You may want to add e.g. '-j4' to build four packages in parallel, or e.g. JOBS=3 to use three cpus per package.
     Note: This may ask you to install additional packages. Do so using the package manager of your distribution.
           For Ubuntu (oneiric), use 'apt-get install libtool yasm scons flex unzip wget')
  5. cd ..

3. Build lightspark
  1. mkdir mingw && cd mingw
  2. cmake -DCMAKE_INSTALL_PREFIX=../mingw-build -DCMAKE_BUILD_TYPE=Debug -G'Unix Makefiles' -DCMAKE_TOOLCHAIN_FILE=../mxe/usr/i686-pc-mingw32/share/cmake/mxe-conf.cmake ../git
  3. make package
  4. cd ..

4. Run lightspark from 'mingw-build/lightspark'

-------------------------------------------------------------------------------
--- a/src/curl.mk
+++ b/src/curl.mk
@@ -7,7 +7,7 @@ $(PKG)_CHECKSUM := f6016a24051d98806ca3ddf754592701cb66e00c
 $(PKG)_SUBDIR   := curl-$($(PKG)_VERSION)
 $(PKG)_FILE     := curl-$($(PKG)_VERSION).tar.bz2
 $(PKG)_URL      := http://curl.haxx.se/download/$($(PKG)_FILE)
-$(PKG)_DEPS     := gcc gnutls libidn libssh2
+$(PKG)_DEPS     := gcc gnutls libssh2
 
 define $(PKG)_UPDATE
     wget -q -O- 'http://curl.haxx.se/download/?C=M;O=D' | \
@@ -23,7 +23,7 @@ define $(PKG)_BUILD
         --disable-shared \
         --prefix='$(PREFIX)/$(TARGET)' \
         --with-gnutls \
-        --with-libidn \
+        --without-libidn \
         --enable-sspi \
         --with-libssh2
     $(MAKE) -C '$(1)' -j '$(JOBS)' install

